// Code generated by entc, DO NOT EDIT.

package ent

import (
	"comment/app/job/internal/data/ent/commentcontent"
	"comment/app/job/internal/data/ent/commentindex"
	"comment/app/job/internal/data/ent/commentsubject"
	"comment/app/job/internal/data/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentcontentFields := schema.CommentContent{}.Fields()
	_ = commentcontentFields
	// commentcontentDescMessage is the schema descriptor for message field.
	commentcontentDescMessage := commentcontentFields[5].Descriptor()
	// commentcontent.DefaultMessage holds the default value on creation for the message field.
	commentcontent.DefaultMessage = commentcontentDescMessage.Default.(string)
	// commentcontentDescCreatedAt is the schema descriptor for created_at field.
	commentcontentDescCreatedAt := commentcontentFields[6].Descriptor()
	// commentcontent.DefaultCreatedAt holds the default value on creation for the created_at field.
	commentcontent.DefaultCreatedAt = commentcontentDescCreatedAt.Default.(func() time.Time)
	commentindexFields := schema.CommentIndex{}.Fields()
	_ = commentindexFields
	// commentindexDescLike is the schema descriptor for like field.
	commentindexDescLike := commentindexFields[7].Descriptor()
	// commentindex.DefaultLike holds the default value on creation for the like field.
	commentindex.DefaultLike = commentindexDescLike.Default.(int32)
	// commentindexDescHate is the schema descriptor for hate field.
	commentindexDescHate := commentindexFields[8].Descriptor()
	// commentindex.DefaultHate holds the default value on creation for the hate field.
	commentindex.DefaultHate = commentindexDescHate.Default.(int32)
	// commentindexDescState is the schema descriptor for state field.
	commentindexDescState := commentindexFields[9].Descriptor()
	// commentindex.DefaultState holds the default value on creation for the state field.
	commentindex.DefaultState = commentindexDescState.Default.(int8)
	// commentindexDescCreatedAt is the schema descriptor for created_at field.
	commentindexDescCreatedAt := commentindexFields[10].Descriptor()
	// commentindex.DefaultCreatedAt holds the default value on creation for the created_at field.
	commentindex.DefaultCreatedAt = commentindexDescCreatedAt.Default.(func() time.Time)
	// commentindexDescCount is the schema descriptor for count field.
	commentindexDescCount := commentindexFields[13].Descriptor()
	// commentindex.DefaultCount holds the default value on creation for the count field.
	commentindex.DefaultCount = commentindexDescCount.Default.(int32)
	commentsubjectFields := schema.CommentSubject{}.Fields()
	_ = commentsubjectFields
	// commentsubjectDescCount is the schema descriptor for count field.
	commentsubjectDescCount := commentsubjectFields[2].Descriptor()
	// commentsubject.DefaultCount holds the default value on creation for the count field.
	commentsubject.DefaultCount = commentsubjectDescCount.Default.(int32)
	// commentsubjectDescNextFloor is the schema descriptor for next_floor field.
	commentsubjectDescNextFloor := commentsubjectFields[3].Descriptor()
	// commentsubject.DefaultNextFloor holds the default value on creation for the next_floor field.
	commentsubject.DefaultNextFloor = commentsubjectDescNextFloor.Default.(int32)
	// commentsubjectDescState is the schema descriptor for state field.
	commentsubjectDescState := commentsubjectFields[4].Descriptor()
	// commentsubject.DefaultState holds the default value on creation for the state field.
	commentsubject.DefaultState = commentsubjectDescState.Default.(int8)
	// commentsubjectDescCreatedAt is the schema descriptor for created_at field.
	commentsubjectDescCreatedAt := commentsubjectFields[5].Descriptor()
	// commentsubject.DefaultCreatedAt holds the default value on creation for the created_at field.
	commentsubject.DefaultCreatedAt = commentsubjectDescCreatedAt.Default.(func() time.Time)
}
